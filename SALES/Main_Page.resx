<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>