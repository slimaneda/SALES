<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FgAAAABJRU5ErkJggg==
</value>
  </data>
</root>